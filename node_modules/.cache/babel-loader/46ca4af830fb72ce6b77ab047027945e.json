{"ast":null,"code":"import _slicedToArray from \"/Users/adamwolfman/Desktop/roxy/roxy/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adamwolfman/Desktop/roxy/roxy/src/Shop/CheckoutForm/CheckoutForm.jsx\";\nimport React, { useState } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\n\nfunction CheckoutForm({\n  stripe,\n  totalCost,\n  metaData\n}) {\n  const _useState = useState('default'),\n        _useState2 = _slicedToArray(_useState, 2),\n        status = _useState2[0],\n        setStatus = _useState2[1];\n\n  console.log(metaData);\n  let billing_details = {\n    \"address\": {\n      \"city\": null,\n      \"line1\": null,\n      \"postal_code\": \"11111\",\n      \"state\": null\n    },\n    \"email\": null,\n    \"name\": null\n  };\n\n  const setDetails = e => {\n    if (e.target.placeholder === \"name\") {\n      billing_details.name = e.target.value;\n    } else if (e.target.placeholder === \"email\") {\n      billing_details.email = e.target.value;\n    } else if (e.target.placeholder === \"city\") {\n      billing_details.address.city = e.target.value;\n    } else if (e.target.placeholder === \"address\") {\n      billing_details.address.line1 = e.target.value;\n    } else if (e.target.placeholder === \"zip code\") {\n      billing_details.address.postal_code = e.target.value;\n    } else if (e.target.placeholder === \"state\") {\n      billing_details.address.state = e.target.value;\n    } // custName = e.target.value;\n    //console.log(billing_details);\n\n  };\n\n  const submit = async e => {\n    e.preventDefault();\n    console.log(e.target);\n    setStatus('submitting');\n\n    try {\n      let _ref = await stripe.createToken({\n        \"address_city\": billing_details.address.city,\n        \"address_line1\": billing_details.address.line1,\n        \"address_zip\": billing_details.address.postal_code,\n        \"address_state\": billing_details.address.state,\n        \"name\": billing_details.name\n      }),\n          token = _ref.token;\n\n      let response = await fetch('/.netlify/functions/charge', {\n        method: 'POST',\n        body: JSON.stringify({\n          amount: totalCost * 100,\n          token: token.id,\n          email: billing_details.email,\n          metaData: metaData\n        })\n      });\n      console.log(response);\n\n      if (response.ok) {\n        setStatus('complete');\n      } else {\n        throw new Error('Network response was not ok.');\n      }\n    } catch (err) {\n      setStatus('error');\n    }\n  };\n\n  if (status === 'complete') {\n    return React.createElement(\"div\", {\n      className: \"CheckoutForm-complete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Payment successful!\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"You will receive your receipt via email within 24 hours.\"));\n  }\n\n  return React.createElement(\"form\", {\n    className: \"CheckoutForm\",\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Would you like to complete the purchase?\"), React.createElement(\"input\", {\n    className: \"checkout-input\",\n    type: \"text\",\n    placeholder: \"name\",\n    required: true,\n    onChange: setDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"checkout-input\",\n    type: \"text\",\n    placeholder: \"address\",\n    required: true,\n    onChange: setDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"checkout-city\",\n    type: \"text\",\n    placeholder: \"city\",\n    required: true,\n    onChange: setDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"checkout-state\",\n    type: \"text\",\n    placeholder: \"state\",\n    required: true,\n    onChange: setDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"checkout-zip\",\n    type: \"text\",\n    placeholder: \"zip code\",\n    required: true,\n    onChange: setDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"checkout-input\",\n    type: \"text\",\n    placeholder: \"email\",\n    required: true,\n    onChange: setDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(CardElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"CheckoutForm-button\",\n    type: \"submit\",\n    disabled: status === 'submitting',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, status === 'submitting' ? 'Submitting' : 'Submit Order'), status === 'error' && React.createElement(\"div\", {\n    className: \"CheckoutForm-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Something went wrong.\"));\n}\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/Users/adamwolfman/Desktop/roxy/roxy/src/Shop/CheckoutForm/CheckoutForm.jsx"],"names":["React","useState","CardElement","injectStripe","CheckoutForm","stripe","totalCost","metaData","status","setStatus","console","log","billing_details","setDetails","e","target","placeholder","name","value","email","address","city","line1","postal_code","state","submit","preventDefault","createToken","token","response","fetch","method","body","JSON","stringify","amount","id","ok","Error","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\n\nfunction CheckoutForm({ stripe, totalCost, metaData }) {\n  const [status, setStatus] = useState('default');\n  console.log(metaData);\n  let billing_details = {\n      \"address\": {\n        \"city\": null,\n        \"line1\": null,\n        \"postal_code\": \"11111\",\n        \"state\": null\n      },\n      \"email\": null,\n      \"name\": null    \n  }\n\n  const setDetails = (e) => {\n    if(e.target.placeholder === \"name\"){\n      billing_details.name = e.target.value;\n    } else if (e.target.placeholder === \"email\"){\n      billing_details.email = e.target.value;\n    } else if (e.target.placeholder === \"city\"){\n      billing_details.address.city = e.target.value;\n    } else if (e.target.placeholder === \"address\"){\n      billing_details.address.line1 = e.target.value;\n    } else if (e.target.placeholder === \"zip code\"){\n      billing_details.address.postal_code = e.target.value;\n    } else if (e.target.placeholder === \"state\"){\n      billing_details.address.state = e.target.value;\n    }\n    \n    // custName = e.target.value;\n    //console.log(billing_details);\n  }\n\n  const submit = async e => {\n    e.preventDefault();\n    console.log(e.target);\n    setStatus('submitting');\n\n    try {\n      let { token } = await stripe.createToken({\n          \"address_city\": billing_details.address.city,\n          \"address_line1\": billing_details.address.line1,\n          \"address_zip\": billing_details.address.postal_code,\n          \"address_state\": billing_details.address.state,\n          \"name\": billing_details.name   \n      });\n\n      let response = await fetch('/.netlify/functions/charge', {\n        method: 'POST',\n        body: JSON.stringify({\n          amount: totalCost * 100,\n          token: token.id,\n          email: billing_details.email,\n          metaData: metaData\n        }),\n      });\n\n      console.log(response);\n\n      if (response.ok) {\n        setStatus('complete');\n      } else {\n        throw new Error('Network response was not ok.');\n      }\n    } catch (err) {\n      setStatus('error');\n    }\n  };\n\n  if (status === 'complete') {\n    return <div className=\"CheckoutForm-complete\"><p>Payment successful!</p><br/><p>You will receive your receipt via email within 24 hours.</p></div>;\n  }\n\n  return (\n    <form className=\"CheckoutForm\" onSubmit={submit}>\n      <h4>Would you like to complete the purchase?</h4>\n      <input className=\"checkout-input\" type=\"text\" placeholder=\"name\" required onChange={setDetails}/><br/>\n      <input className=\"checkout-input\" type=\"text\" placeholder=\"address\" required onChange={setDetails}/><br/>\n      <input className=\"checkout-city\" type=\"text\" placeholder=\"city\" required onChange={setDetails}/>\n      <input className=\"checkout-state\" type=\"text\" placeholder=\"state\" required onChange={setDetails}/>\n      <input className=\"checkout-zip\" type=\"text\" placeholder=\"zip code\" required onChange={setDetails}/><br/>\n      <input className=\"checkout-input\" type=\"text\" placeholder=\"email\" required onChange={setDetails}/>\n      <CardElement />\n      <button\n        className=\"CheckoutForm-button\"\n        type=\"submit\"\n        disabled={status === 'submitting'}\n      >\n        {status === 'submitting' ? 'Submitting' : 'Submit Order'}\n      </button>\n      {status === 'error' && (\n        <div className=\"CheckoutForm-error\">Something went wrong.</div>\n      )}\n    </form>\n  );\n}\n\nexport default injectStripe(CheckoutForm);"]},"metadata":{},"sourceType":"module"}