{"ast":null,"code":"import _slicedToArray from \"/Users/adamwolfman/Desktop/roxy/roxy/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/adamwolfman/Desktop/roxy/roxy/src/Shop/CheckoutForm/CheckoutForm.jsx\";\nimport React, { useState } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\n\nfunction CheckoutForm({\n  stripe,\n  totalCost\n}) {\n  const _useState = useState('default'),\n        _useState2 = _slicedToArray(_useState, 2),\n        status = _useState2[0],\n        setStatus = _useState2[1];\n\n  const submit = async e => {\n    e.preventDefault();\n    setStatus('submitting');\n\n    try {\n      let _ref = await stripe.createToken({\n        name: 'Name'\n      }),\n          token = _ref.token;\n\n      let response = await fetch('/.netlify/functions/charge', {\n        method: 'POST',\n        body: JSON.stringify({\n          amount: totalCost * 100,\n          token: token.id\n        })\n      });\n\n      if (response.ok) {\n        setStatus('complete');\n      } else {\n        throw new Error('Network response was not ok.');\n      }\n    } catch (err) {\n      setStatus('error');\n    }\n  };\n\n  if (status === 'complete') {\n    return React.createElement(\"div\", {\n      className: \"CheckoutForm-complete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Payment successful!\");\n  }\n\n  return React.createElement(\"form\", {\n    className: \"CheckoutForm\",\n    onSubmit: submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Would you like to complete the purchase?\"), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(CardElement, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"CheckoutForm-button\",\n    type: \"submit\",\n    disabled: status === 'submitting',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, status === 'submitting' ? 'Submitting' : 'Submit Order'), status === 'error' && React.createElement(\"div\", {\n    className: \"CheckoutForm-error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Something went wrong.\"));\n}\n\nexport default injectStripe(CheckoutForm);","map":{"version":3,"sources":["/Users/adamwolfman/Desktop/roxy/roxy/src/Shop/CheckoutForm/CheckoutForm.jsx"],"names":["React","useState","CardElement","injectStripe","CheckoutForm","stripe","totalCost","status","setStatus","submit","e","preventDefault","createToken","name","token","response","fetch","method","body","JSON","stringify","amount","id","ok","Error","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,uBAA1C;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAtB,EAA6C;AAAA,oBACfL,QAAQ,CAAC,SAAD,CADO;AAAA;AAAA,QACpCM,MADoC;AAAA,QAC5BC,SAD4B;;AAG3C,QAAMC,MAAM,GAAG,MAAMC,CAAN,IAAW;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEAH,IAAAA,SAAS,CAAC,YAAD,CAAT;;AAEA,QAAI;AAAA,iBACc,MAAMH,MAAM,CAACO,WAAP,CAAmB;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAnB,CADpB;AAAA,UACIC,KADJ,QACIA,KADJ;;AAGF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAAD,EAA+B;AACvDC,QAAAA,MAAM,EAAE,MAD+C;AAEvDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,MAAM,EAAEf,SAAS,GAAG,GADD;AAEnBQ,UAAAA,KAAK,EAAEA,KAAK,CAACQ;AAFM,SAAf;AAFiD,OAA/B,CAA1B;;AAQA,UAAIP,QAAQ,CAACQ,EAAb,EAAiB;AACff,QAAAA,SAAS,CAAC,UAAD,CAAT;AACD,OAFD,MAEO;AACL,cAAM,IAAIgB,KAAJ,CAAU,8BAAV,CAAN;AACD;AACF,KAhBD,CAgBE,OAAOC,GAAP,EAAY;AACZjB,MAAAA,SAAS,CAAC,OAAD,CAAT;AACD;AACF,GAxBD;;AA0BA,MAAID,MAAM,KAAK,UAAf,EAA2B;AACzB,WAAO;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD;;AAED,SACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEE,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAEyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFzC,EAGE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAG4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH5C,EAIE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAEF,MAAM,KAAK,YAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,MAAM,KAAK,YAAX,GAA0B,YAA1B,GAAyC,cAL5C,CANF,EAaGA,MAAM,KAAK,OAAX,IACC;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAdJ,CADF;AAmBD;;AAED,eAAeJ,YAAY,CAACC,YAAD,CAA3B","sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, injectStripe } from 'react-stripe-elements';\n\nfunction CheckoutForm({ stripe, totalCost }) {\n  const [status, setStatus] = useState('default');\n\n  const submit = async e => {\n    e.preventDefault();\n\n    setStatus('submitting');\n\n    try {\n      let { token } = await stripe.createToken({ name: 'Name' });\n\n      let response = await fetch('/.netlify/functions/charge', {\n        method: 'POST',\n        body: JSON.stringify({\n          amount: totalCost * 100,\n          token: token.id,\n        }),\n      });\n\n      if (response.ok) {\n        setStatus('complete');\n      } else {\n        throw new Error('Network response was not ok.');\n      }\n    } catch (err) {\n      setStatus('error');\n    }\n  };\n\n  if (status === 'complete') {\n    return <div className=\"CheckoutForm-complete\">Payment successful!</div>;\n  }\n\n  return (\n    <form className=\"CheckoutForm\" onSubmit={submit}>\n      <h4>Would you like to complete the purchase?</h4>\n      <input type=\"text\" placeholder=\"name\"/><br/>\n      <input type=\"text\" placeholder=\"address\"/><br/>\n      <input type=\"text\" placeholder=\"email\"/>\n      <CardElement />\n      <button\n        className=\"CheckoutForm-button\"\n        type=\"submit\"\n        disabled={status === 'submitting'}\n      >\n        {status === 'submitting' ? 'Submitting' : 'Submit Order'}\n      </button>\n      {status === 'error' && (\n        <div className=\"CheckoutForm-error\">Something went wrong.</div>\n      )}\n    </form>\n  );\n}\n\nexport default injectStripe(CheckoutForm);"]},"metadata":{},"sourceType":"module"}